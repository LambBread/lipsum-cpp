cmake_minimum_required(VERSION 3.15)
project(lipsum-cpp)
option(LPSM_BUILD_STATIC "Build as static library" OFF)
option(LPSM_BUILD_CWRAPPER "Build C wrapper" OFF)
option(LPSM_BUILD_EXAMPLES "Build examples" OFF)
option(LPSM_BUILD_ASHTML "Set the executable suffix to HTML for WASM builds" ON)
option(LPSM_BUILD_DOCS "Build Doxygen docs" OFF)
option(LPSM_BUILD_SAMPLE "Run the Python script that generates lipsum.inl" OFF)
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/sample.cmake")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/docs.cmake")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/examples.cmake")
include("${CMAKE_CURRENT_SOURCE_DIR}/cmake/optcomp.cmake")
if(LPSM_BUILD_STATIC)
    add_library(lipsum-cpp STATIC "${lipsum_srcs}")
    target_compile_definitions(lipsum-cpp PUBLIC LIPSUM_BUILD_STATIC)
    target_include_directories(lipsum-cpp PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/src")
else()
    # single header
    add_library(lipsum-cpp INTERFACE)
    target_include_directories(lipsum-cpp INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/src")
endif()
