cmake_minimum_required(VERSION 3.15)
project(lipsum-cpp)
option(LPSM_BUILD_STATIC "Build as static library" OFF)
option(LPSM_BUILD_CWRAPPER "Build C wrapper" OFF)
option(LPSM_BUILD_EXAMPLES "Build examples" OFF)
option(LPSM_BUILD_ASHTML "Set the executable suffix to HTML for WASM builds" ON)
option(LPSM_BUILD_DOCS "Build Doxygen docs" OFF)
if(EMSCRIPTEN AND LPSM_BUILD_ASHTML)
    message("Doing WebAssembly HTML build")
    set(CMAKE_EXECUTABLE_SUFFIX ".html")
endif()
if(LPSM_BUILD_DOCS)
    find_package(Doxygen REQUIRED)
    if(DOXYGEN_FOUND)
        set(DOXYGEN_IN "${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile")
        set(DOXYGEN_OUT "${CMAKE_CURRENT_SOURCE_DIR}/docs")
        add_custom_target(doc
            COMMAND "${DOXYGEN_EXECUTABLE}" "${DOXYGEN_IN}"
            WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
            COMMENT "Generating API documentation with Doxygen"
            VERBATIM)
    endif()
endif()
if(LPSM_BUILD_EXAMPLES)
    message("Building examples")
    add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/examples")
endif()
set(lipsum_srcs "")
if(LPSM_BUILD_STATIC)
    message("Building static")
    list(APPEND lipsum_srcs "${CMAKE_CURRENT_SOURCE_DIR}/src/lipsum.cpp")
endif()
if(LPSM_BUILD_CWRAPPER)
    message("Building C wrapper")
    list(APPEND lipsum_srcs "${CMAKE_CURRENT_SOURCE_DIR}/src/lipsum_h.cpp")
endif()
if(LPSM_BUILD_STATIC)
    add_library(lipsum-cpp STATIC "${lipsum_srcs}")
    target_compile_definitions(lipsum-cpp PUBLIC LIPSUM_BUILD_STATIC)
    target_include_directories(lipsum-cpp PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/src")
else()
    add_library(lipsum-cpp INTERFACE)
    target_include_directories(lipsum-cpp INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/src")
endif()
